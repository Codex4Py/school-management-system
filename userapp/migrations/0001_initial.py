# Generated by Django 5.1.1 on 2024-12-14 06:34

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=125)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=125)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('duration', models.IntegerField(help_text='Duration of the course in hours or weeks')),
                ('prerequisites', models.TextField(blank=True, help_text='Any prerequisite knowledge or courses required for this course', null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Active', max_length=50)),
                ('start_date', models.DateField(blank=True, help_text='Course start date', null=True)),
                ('end_date', models.DateField(blank=True, help_text='Course end date', null=True)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('teacher', 'Teacher'), ('student', 'Student'), ('parent', 'Parent')], default='admin', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseFees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fees_for_course', models.DecimalField(decimal_places=2, max_digits=10)),
                ('course_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.course')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('relationship', models.CharField(max_length=50)),
                ('occupation', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=10, unique=True)),
                ('role_number', models.CharField(editable=False, max_length=10, unique=True)),
                ('profile_photo', models.ImageField(default='students/default-avatar.jpg', null=True, upload_to='students/')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('address', models.TextField()),
                ('dob', models.DateField()),
                ('father_name', models.CharField(blank=True, max_length=255, null=True)),
                ('father_occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('father_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=255, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.course')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_students', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeesByStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_fees', models.DateField(auto_now=True)),
                ('fees_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_mode', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('online', 'Online')], max_length=20)),
                ('installment_number', models.IntegerField(default=1)),
                ('total_installments', models.IntegerField()),
                ('student_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.student')),
            ],
        ),
        migrations.CreateModel(
            name='EnrollStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('dropped', 'Dropped')], default='active', max_length=20)),
                ('total_fees_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_fees_due', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_installments', models.IntegerField(default=1)),
                ('paid_installments', models.IntegerField(default=0)),
                ('course_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.course')),
                ('student_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.student')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='courses', to='userapp.student'),
        ),
        migrations.CreateModel(
            name='StudentParent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.parent')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.student')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_photo', models.ImageField(default='media/img/default-avatar.jpg', null=True, upload_to='teachers/')),
                ('full_name', models.CharField(max_length=255)),
                ('dob', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=6)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.TextField()),
                ('department', models.CharField(max_length=255)),
                ('designation', models.CharField(max_length=255)),
                ('joining_date', models.DateField(default=django.utils.timezone.now)),
                ('experience', models.PositiveIntegerField(help_text='Number of years of teaching experience')),
                ('qualification', models.CharField(max_length=255)),
                ('specialization', models.CharField(blank=True, help_text='Specialized subjects or skills', max_length=255, null=True)),
                ('salary', models.DecimalField(decimal_places=2, default=0.0, help_text="Teacher's monthly salary", max_digits=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
                'ordering': ['full_name'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='teachers',
            field=models.ManyToManyField(blank=True, related_name='courses', to='userapp.teacher'),
        ),
        migrations.CreateModel(
            name='TeacherSalaryPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('online', 'Online')], max_length=20)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userapp.teacher')),
            ],
        ),
    ]
